
R version 2.13.2 (2011-09-30)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Machine Learning 102 - Unsupervised - Hacker Dojo
> # http://machinelearning102.pbworks.com/w/page/32890352/FrontPage
> #
> # Homework #1, Basic clustering
> # Dave Abercrombie, October 24 2011
> #
> # http://machinelearning102.pbworks.com/w/file/37958115/ML102Homework02.pdf
> # http://archive.ics.uci.edu/ml/datasets/Synthetic+Control+Chart+Time+Series
> #
> # Problem 1 of 4
> #
> 
> #####################################################################
> # Step 1. Import data
> 
> setwd("/Users/dabercrombie/Documents/aberdave-repos/Machine-Learning/ml102/hw1")
> 
> control.chart.raw.df <- read.table(
+   file="synthetic_control.data",
+   header=FALSE,
+ )
> 
> # Interactive look at structure
> str(control.chart.raw.df)
'data.frame':	600 obs. of  60 variables:
 $ V1 : num  28.8 24.9 31.4 25.8 27.2 ...
 $ V2 : num  34.5 25.7 30.6 30.5 29.2 ...
 $ V3 : num  31.3 27.6 26.4 35.4 33.7 ...
 $ V4 : num  31.3 32.8 24.3 25.6 25.6 ...
 $ V5 : num  28.9 27.9 27.9 28 24.7 ...
 $ V6 : num  33.8 31.6 28.5 25.3 28.9 ...
 $ V7 : num  25.4 31.5 25 28.1 35.8 ...
 $ V8 : num  27.8 35.5 32.4 29.4 34.9 ...
 $ V9 : num  35.2 28 25.2 31.5 24.6 ...
 $ V10: num  27.1 31.7 27.3 27.3 34.2 ...
 $ V11: num  32.9 27.5 31.8 29 28 ...
 $ V12: num  29.2 31.2 27.3 29 25.3 ...
 $ V13: num  36 27.5 28.3 30 35.4 ...
 $ V14: num  32.3 31.4 26.6 30.3 34.9 ...
 $ V15: num  34.5 27.8 24 30.4 25.1 ...
 $ V16: num  32.9 24.5 35.1 24.3 29.5 ...
 $ V17: num  34.1 27.6 31.6 24.3 33.2 ...
 $ V18: num  26.5 35.6 32.6 35.1 31.1 ...
 $ V19: num  27.7 35.4 31 25.4 31.4 ...
 $ V20: num  26.4 31.4 34.1 32.1 26.5 ...
 $ V21: num  25.8 30.7 26.9 33.3 28.6 ...
 $ V22: num  29.3 24.1 31.5 25 31.7 ...
 $ V23: num  30.7 35.1 35 35.3 35.9 ...
 $ V24: num  29.5 30.5 32.4 31.6 33 ...
 $ V25: num  33 32 24.3 29.3 24.6 ...
 $ V26: num  25 33.7 30.2 34.2 33.2 ...
 $ V27: num  28.9 25.6 31.2 26.5 27.4 ...
 $ V28: num  24.3 30.5 26.7 32.2 32.6 ...
 $ V29: num  26.1 33.6 31.5 25.5 35.9 ...
 $ V30: num  34.9 25.1 28.9 24.8 28 ...
 $ V31: num  25 34.1 27.3 27.6 33.1 ...
 $ V32: num  26.6 32.6 24.2 28.4 33.4 ...
 $ V33: num  35.7 28.3 27 32.4 26.9 ...
 $ V34: num  28.4 26.1 25.3 27 30.2 ...
 $ V35: num  29.1 26.9 31.6 35.9 29.7 ...
 $ V36: num  28.2 31.5 24.7 35.1 30.9 ...
 $ V37: num  26.2 33.1 27.5 24.4 24.5 ...
 $ V38: num  33.3 24.1 24.2 27.6 34 ...
 $ V39: num  31 28.5 26.8 27.8 33.3 ...
 $ V40: num  27 25.8 35.1 29.9 33.2 ...
 $ V41: num  35.5 36 32.6 32.4 31.3 ...
 $ V42: num  26.2 26.5 31.1 26.9 27.9 ...
 $ V43: num  29 24.9 26.4 31.3 35.1 ...
 $ V44: num  32 26 28.1 29.4 35.1 ...
 $ V45: num  31.1 32.8 31.4 34.3 33.8 ...
 $ V46: num  34.3 28.5 27.3 24.7 25.9 ...
 $ V47: num  28.1 26.3 29.6 35.8 29.1 ...
 $ V48: num  28.9 30.6 36 31.9 24.3 ...
 $ V49: num  35.5 29 34.1 34.2 32.3 ...
 $ V50: num  29.7 29.4 27.2 31.2 34.9 ...
 $ V51: num  31.4 32.6 33.6 34.6 27.7 ...
 $ V52: num  24.6 31 26.6 28.7 28 ...
 $ V53: num  33.7 26.6 25.5 28.3 35.7 ...
 $ V54: num  25 28.4 32.5 31.6 27.6 ...
 $ V55: num  34.9 33.7 25.6 34.6 35.3 ...
 $ V56: num  35 26.4 30 32.5 30 ...
 $ V57: num  32.5 28.5 31.4 31 34.2 ...
 $ V58: num  33.4 34.2 33.9 24.9 33.1 ...
 $ V59: num  25.5 32.1 29.5 27.4 31.1 ...
 $ V60: num  25.9 26.7 29.3 25.3 31 ...
> tail(control.chart.raw.df)
         V1      V2      V3      V4      V5      V6      V7      V8      V9
595 31.0216 28.1397 26.7303 26.5702 29.5608 26.9657 28.0493 25.6731 33.7207
596 29.6254 25.5034 31.5978 31.4663 33.5488 28.2935 28.9244 30.6922 25.3301
597 27.4144 25.3973 26.4600 31.9782 26.1251 27.4629 30.4888 34.9292 27.5580
598 35.8990 26.6719 34.1911 35.8270 25.1009 24.8564 25.8141 30.6301 34.2124
599 24.5383 24.2802 28.2814 27.1316 26.6623 32.1100 32.8100 30.4829 35.8586
600 34.3354 30.9375 31.9529 31.1457 24.5189 24.3933 27.6961 29.8744 26.7666
        V10     V11     V12     V13     V14     V15     V16     V17     V18
595 26.2746 30.4102 31.1009 24.0187 35.6589 25.2526 25.9319 28.6178 32.4225
596 26.8728 31.8170 24.2666 31.3870 31.6536 34.8491 29.2509 28.2719 35.7808
597 30.6863 27.5106 32.2694 32.8335 27.1294 24.9908 32.6095 25.3870 32.6741
598 32.5874 31.0315 34.3038 24.5549 35.8704 30.6834 29.0577 28.6365 29.8553
599 25.3866 31.3007 25.4285 26.8658 30.8516 24.4781 25.6653 25.2959 30.2629
600 33.0887 31.3705 26.2327 26.3833 35.6614 32.6631 27.6850 29.2769 31.7612
        V19     V20     V21     V22     V23      V24     V25     V26     V27
595 33.6656 33.7453 35.1183 29.1635 25.4770 31.94700 35.4907 30.7300 25.8203
596 31.4722 32.3223 28.5084 29.8671 31.4740 29.15250 24.1245 25.3763 15.9175
597 34.6068 33.5194 29.0122 28.7052 32.1156 29.12090 26.4240 33.4519 33.6234
598 32.0370 32.9785 26.1183 26.1073 25.0956 22.70280 17.6979 16.2812 18.1860
599 29.6570 25.2948 25.0223 35.2641 26.1089  9.59991 12.6750 16.5749 19.7601
600 34.6501 24.9401 33.4339 26.8485 28.7144 26.58120 34.8249 34.0258  8.8228
        V28     V29      V30     V31     V32     V33      V34      V35      V36
595 24.6514 25.5284 31.34290 29.0048 31.8251 26.8908 28.19400 31.42890 16.93480
596 22.2307 18.2640 24.58200 18.6793 26.3700 24.1538 25.90220 24.79980 17.27290
597 29.4565 35.0254 26.60690 34.4423 34.8473 28.8965 34.43860 32.01050 34.81570
598 24.0163 24.5528 21.45170 15.8358 21.3107 20.8788 22.55920 21.69400 25.85610
599 13.3489 18.1374  7.99333 16.7511 16.3406 15.3491  9.47579  9.94326 16.60900
600 12.6338 12.6937  6.27907 13.6444 16.6505 18.0782  7.97526  9.27375  9.20801
         V37      V38      V39     V40      V41      V42     V43      V44
595  8.06973 16.60390 14.74280 10.3421  8.15492 10.39530 17.6887 16.79050
596 25.46300 22.29610 26.87570 24.5111 25.70240 21.35560 25.9675 15.50650
597 27.77280 11.54930 20.21900 19.6781 14.71510 14.38350 15.5557  9.57331
598 20.53250 21.54200 25.76580 26.0184 20.82040 24.95860 18.9593 23.34580
599 12.33130  8.64478 19.45680 10.8356 10.34900  9.72550 14.5746 18.95890
600 12.87910 12.72930  6.97605 17.8322 13.32970  6.32571 12.1314 11.84210
        V45     V46      V47     V48     V49     V50      V51      V52      V53
595 14.1377 15.7608  6.78740 13.0624 16.6601 15.0205  9.89077  9.21618 11.54990
596 24.2809 25.0252 21.75000 16.8370 15.0791 17.3331 26.74680 18.87950 21.33210
597 10.6357 16.6386 17.23610 19.6428 18.3168 15.3225 19.10630 11.45460 16.88800
598 16.0682 22.8361 21.93930 25.7221 19.6707 26.2986 21.87870 16.00210 15.28790
599 15.8224 17.3644 11.91450 13.7620 12.4022 19.6283 19.64410 11.52380 15.41850
600 16.7155 10.4253  9.44524 14.3998 15.6964 11.0276 10.60750 15.18970  9.07618
         V54      V55      V56     V57     V58      V59     V60
595  8.87687 18.22040  9.47691 10.3424 16.4302 11.89760 15.3660
596 23.69150 22.30970 19.13610 15.2851 22.5278 20.65720 24.1289
597 18.26910 11.58310 14.11760 20.2289 11.1314  9.98019 10.7201
598 16.94590 17.53380 16.84640 16.5460 15.9268 18.08430 17.4747
599 12.66990 13.11640  8.23496 12.0419 19.3096 12.99850 17.4599
600 17.90850  9.84551 15.01300 13.9132 11.7426 11.69890 10.1521
> dim(control.chart.raw.df)
[1] 600  60
> 
> # Interactive look at summary stats.
> # Summary stats are all about the same; no way to distiguish
> # But this is viewing the columns as attributes, which they are not really.
> # It might almost make more sense to look at summary stats per row
> #
> summary(control.chart.raw.df)
       V1              V2              V3              V4       
 Min.   :24.00   Min.   :23.51   Min.   :23.29   Min.   :23.09  
 1st Qu.:27.09   1st Qu.:27.53   1st Qu.:27.81   1st Qu.:28.03  
 Median :30.09   Median :30.83   Median :31.09   Median :31.29  
 Mean   :30.02   Mean   :30.91   Mean   :31.90   Mean   :32.23  
 3rd Qu.:33.07   3rd Qu.:33.92   3rd Qu.:34.77   3rd Qu.:35.07  
 Max.   :36.03   Max.   :43.62   Max.   :48.30   Max.   :49.95  
       V5              V6              V7              V8       
 Min.   :22.50   Min.   :22.12   Min.   :16.29   Min.   :13.00  
 1st Qu.:27.45   1st Qu.:27.74   1st Qu.:27.02   1st Qu.:25.90  
 Median :31.25   Median :31.29   Median :30.40   Median :29.35  
 Mean   :31.76   Mean   :31.19   Mean   :30.26   Mean   :29.15  
 3rd Qu.:34.94   3rd Qu.:34.08   3rd Qu.:33.29   3rd Qu.:32.80  
 Max.   :49.52   Max.   :46.60   Max.   :42.49   Max.   :38.48  
       V9             V10              V11             V12        
 Min.   :11.79   Min.   : 9.382   Min.   :12.16   Min.   : 9.808  
 1st Qu.:24.94   1st Qu.:25.053   1st Qu.:25.26   1st Qu.:25.792  
 Median :28.75   Median :29.013   Median :28.95   Median :29.391  
 Mean   :28.46   Mean   :28.335   Mean   :28.15   Mean   :29.000  
 3rd Qu.:32.64   3rd Qu.:32.679   3rd Qu.:32.01   3rd Qu.:32.909  
 Max.   :39.53   Max.   :40.144   Max.   :40.07   Max.   :40.770  
      V13             V14             V15             V16       
 Min.   :12.89   Min.   :16.29   Min.   :18.12   Min.   :17.73  
 1st Qu.:26.47   1st Qu.:27.02   1st Qu.:26.83   1st Qu.:26.93  
 Median :29.82   Median :30.50   Median :30.44   Median :31.11  
 Mean   :29.87   Mean   :30.61   Mean   :30.94   Mean   :31.19  
 3rd Qu.:33.56   3rd Qu.:33.71   3rd Qu.:34.53   3rd Qu.:34.82  
 Max.   :47.24   Max.   :50.13   Max.   :50.11   Max.   :48.76  
      V17             V18             V19             V20       
 Min.   :16.49   Min.   :15.09   Min.   :11.80   Min.   :11.54  
 1st Qu.:26.87   1st Qu.:26.07   1st Qu.:25.94   1st Qu.:25.68  
 Median :30.71   Median :30.69   Median :30.30   Median :29.79  
 Mean   :31.09   Mean   :30.72   Mean   :30.33   Mean   :29.91  
 3rd Qu.:34.99   3rd Qu.:34.93   3rd Qu.:34.17   3rd Qu.:34.20  
 Max.   :49.23   Max.   :49.45   Max.   :49.56   Max.   :49.16  
      V21             V22              V23              V24       
 Min.   :11.40   Min.   : 9.397   Min.   : 8.878   Min.   : 9.60  
 1st Qu.:25.36   1st Qu.:24.629   1st Qu.:24.878   1st Qu.:24.23  
 Median :29.85   Median :28.844   Median :29.166   Median :30.28  
 Mean   :29.69   Mean   :29.169   Mean   :29.279   Mean   :29.70  
 3rd Qu.:34.08   3rd Qu.:33.903   3rd Qu.:34.270   3rd Qu.:34.90  
 Max.   :53.22   Max.   :53.848   Max.   :51.353   Max.   :52.90  
      V25              V26              V27              V28        
 Min.   : 7.906   Min.   : 6.083   Min.   : 6.624   Min.   : 9.958  
 1st Qu.:24.345   1st Qu.:24.305   1st Qu.:24.563   1st Qu.:24.472  
 Median :29.443   Median :29.810   Median :30.271   Median :30.579  
 Mean   :29.754   Mean   :29.990   Mean   :30.460   Mean   :30.466  
 3rd Qu.:34.907   3rd Qu.:35.914   3rd Qu.:36.106   3rd Qu.:36.013  
 Max.   :55.492   Max.   :54.515   Max.   :55.578   Max.   :52.242  
      V29              V30              V31              V32        
 Min.   : 9.097   Min.   : 4.454   Min.   : 4.463   Min.   : 5.002  
 1st Qu.:24.290   1st Qu.:24.141   1st Qu.:22.788   1st Qu.:22.716  
 Median :30.461   Median :30.447   Median :30.049   Median :29.925  
 Mean   :30.540   Mean   :30.511   Mean   :30.065   Mean   :30.229  
 3rd Qu.:37.107   3rd Qu.:37.346   3rd Qu.:37.555   3rd Qu.:37.918  
 Max.   :54.775   Max.   :53.424   Max.   :52.561   Max.   :55.658  
      V33              V34              V35              V36        
 Min.   : 5.531   Min.   : 5.533   Min.   : 5.968   Min.   : 7.317  
 1st Qu.:22.028   1st Qu.:21.755   1st Qu.:20.273   1st Qu.:20.283  
 Median :29.992   Median :30.387   Median :30.091   Median :30.155  
 Mean   :30.179   Mean   :30.226   Mean   :29.943   Mean   :30.112  
 3rd Qu.:38.298   3rd Qu.:39.267   3rd Qu.:38.928   3rd Qu.:40.086  
 Max.   :55.459   Max.   :54.215   Max.   :54.861   Max.   :54.589  
      V37             V38              V39              V40        
 Min.   : 4.70   Min.   : 5.263   Min.   : 6.259   Min.   : 6.128  
 1st Qu.:19.25   1st Qu.:19.287   1st Qu.:18.631   1st Qu.:18.859  
 Median :29.59   Median :29.775   Median :28.801   Median :28.136  
 Mean   :29.73   Mean   :29.749   Mean   :29.352   Mean   :29.623  
 3rd Qu.:40.32   3rd Qu.:40.136   3rd Qu.:40.824   3rd Qu.:41.059  
 Max.   :53.93   Max.   :53.968   Max.   :54.825   Max.   :55.148  
      V41              V42              V43             V44        
 Min.   : 5.974   Min.   : 3.635   Min.   : 4.75   Min.   : 2.912  
 1st Qu.:18.793   1st Qu.:19.248   1st Qu.:18.60   1st Qu.:18.674  
 Median :28.604   Median :29.952   Median :30.03   Median :29.606  
 Mean   :29.728   Mean   :30.006   Mean   :30.28   Mean   :30.254  
 3rd Qu.:40.702   3rd Qu.:41.236   3rd Qu.:42.18   3rd Qu.:42.060  
 Max.   :53.529   Max.   :55.934   Max.   :55.48   Max.   :55.992  
      V45              V46              V47              V48        
 Min.   : 3.566   Min.   : 1.798   Min.   : 1.293   Min.   : 1.347  
 1st Qu.:18.357   1st Qu.:18.037   1st Qu.:17.412   1st Qu.:17.253  
 Median :30.157   Median :31.315   Median :31.841   Median :30.511  
 Mean   :30.126   Mean   :30.561   Mean   :30.446   Mean   :30.117  
 3rd Qu.:41.677   3rd Qu.:43.193   3rd Qu.:42.423   3rd Qu.:42.284  
 Max.   :55.838   Max.   :57.682   Max.   :58.600   Max.   :57.669  
      V49               V50               V51               V52        
 Min.   : 0.6413   Min.   : 0.2809   Min.   : 0.5756   Min.   :-1.116  
 1st Qu.:17.9990   1st Qu.:18.1437   1st Qu.:17.3252   1st Qu.:17.875  
 Median :30.2726   Median :29.2232   Median :30.2648   Median :29.062  
 Mean   :30.1501   Mean   :29.8835   Mean   :29.7459   Mean   :29.583  
 3rd Qu.:42.7937   3rd Qu.:42.8826   3rd Qu.:42.5615   3rd Qu.:42.279  
 Max.   :57.2922   Max.   :58.2838   Max.   :59.0165   Max.   :59.013  
      V53                V54              V55              V56       
 Min.   : 0.07817   Min.   :-1.948   Min.   :-1.399   Min.   :-2.05  
 1st Qu.:17.14975   1st Qu.:16.865   1st Qu.:17.572   1st Qu.:17.10  
 Median :29.09945   Median :28.263   Median :30.535   Median :30.21  
 Mean   :29.61116   Mean   :29.564   Mean   :29.959   Mean   :30.25  
 3rd Qu.:41.89048   3rd Qu.:42.687   3rd Qu.:43.077   3rd Qu.:43.24  
 Max.   :60.00890   Max.   :61.019   Max.   :61.116   Max.   :62.18  
      V57              V58              V59              V60        
 Min.   :-3.789   Min.   :-1.565   Min.   :-1.593   Min.   :-5.115  
 1st Qu.:17.159   1st Qu.:17.396   1st Qu.:16.639   1st Qu.:17.634  
 Median :30.511   Median :30.214   Median :30.462   Median :30.870  
 Mean   :30.259   Mean   :30.037   Mean   :30.009   Mean   :30.161  
 3rd Qu.:44.041   3rd Qu.:43.215   3rd Qu.:43.863   3rd Qu.:43.606  
 Max.   :62.853   Max.   :60.539   Max.   :63.828   Max.   :61.707  
> 
> # But the above are for "vertical" slices of the time-series data.
> # I wonder what summary stats lool like per row.
> 
> apply( control.chart.raw.df, 1, mean)
  [1] 30.11829 29.65610 29.26004 29.69326 30.71879 30.03026 29.57282 30.57880
  [9] 29.72656 30.43624 29.56830 30.23909 30.18953 30.20437 29.46558 30.67818
 [17] 30.67623 30.37757 29.76743 30.54885 29.78806 30.00098 29.75603 30.66756
 [25] 31.07284 29.23074 29.59876 30.30431 30.49033 29.83505 30.04748 29.68962
 [33] 29.94950 30.28112 30.13217 30.11475 30.18882 29.64538 29.66765 29.41917
 [41] 30.87668 29.92022 29.75522 29.71204 29.50839 30.69924 30.47613 30.05185
 [49] 29.32777 29.67860 29.18689 29.55511 29.80110 30.37830 30.64734 29.90312
 [57] 29.92618 30.61050 30.67538 29.42592 29.73650 29.79950 29.68450 30.62263
 [65] 29.79979 30.08503 29.17382 29.63296 29.71391 30.00465 30.02368 29.77382
 [73] 30.01222 29.80837 30.38981 30.20886 30.05754 29.75413 30.01495 29.85868
 [81] 30.34864 30.00737 30.12886 30.50960 29.61232 29.93923 30.33961 30.49627
 [89] 29.91736 30.83391 30.53885 29.81576 30.15653 30.37337 29.39777 29.62603
 [97] 29.95750 29.75731 29.48096 30.14044 31.53357 30.03743 32.17089 30.95506
[105] 30.87111 30.14984 30.53329 30.59213 30.94551 29.96823 30.63607 30.91828
[113] 30.09469 31.10627 31.21892 29.61944 30.73991 30.29557 30.97802 30.82729
[121] 30.51822 29.73313 29.79704 29.56774 30.47072 29.85470 30.34430 30.60980
[129] 31.09835 29.39683 28.92900 29.61279 30.38939 31.26662 29.18020 29.56626
[137] 30.59371 31.34729 29.73239 30.36148 30.82422 29.40436 30.00696 30.62196
[145] 30.19401 29.74249 30.80166 30.34111 29.38323 30.25560 29.77146 30.63463
[153] 31.28289 29.74453 30.21390 30.96379 30.66028 31.41134 30.96934 30.33230
[161] 30.39927 31.43850 29.94656 30.89363 30.38498 29.34831 30.41362 29.53740
[169] 31.27815 30.53904 30.19683 30.20483 30.82068 30.18464 30.65928 30.15021
[177] 30.07479 30.19490 31.48742 30.46422 30.42159 30.80233 30.04337 31.58063
[185] 29.86707 30.06537 30.21482 29.62271 30.69941 29.77154 29.63025 30.87001
[193] 30.34429 31.01583 29.62821 30.73784 30.02391 30.36288 29.86707 30.13667
[201] 36.27982 36.95983 45.13913 43.48369 39.14852 38.27989 43.95738 40.55537
[209] 43.37029 43.51180 37.80316 38.82491 41.68385 36.87918 40.62444 44.71868
[217] 38.29510 42.72588 36.59195 43.44179 42.46168 36.15739 43.61480 36.63785
[225] 42.39982 43.34478 36.50908 41.73993 43.87356 42.31087 40.26118 39.63251
[233] 44.06498 41.91401 38.77647 37.61575 43.52827 42.95496 40.38723 41.26548
[241] 39.83123 38.36266 42.73134 41.25932 42.91549 42.87640 39.67829 38.64552
[249] 42.08695 35.82322 42.19202 37.63850 40.33122 41.65702 36.70800 36.13468
[257] 41.48894 39.27772 43.98941 38.44581 41.56012 42.21479 38.08568 43.48485
[265] 42.08906 40.24936 43.58812 38.91204 38.67386 39.71916 37.13866 39.06286
[273] 37.90501 37.42182 41.32505 37.27580 41.48272 43.43264 39.63086 37.94126
[281] 41.14203 37.68652 40.30394 39.79270 43.46175 38.01223 40.25083 40.44606
[289] 38.01856 38.42085 39.38189 40.45806 40.88075 36.19865 42.87705 38.08903
[297] 36.55269 38.82541 37.14391 42.37398 14.64209 23.97284 22.36820 19.14902
[305] 24.09886 22.83130 19.04737 22.72092 22.16589 17.58161 15.44215 16.27938
[313] 17.78042 18.13680 17.36336 15.73564 23.24156 20.81823 18.44607 18.10265
[321] 17.70552 17.60890 16.49320 23.73255 19.79511 16.96161 21.20727 20.27108
[329] 21.48341 21.48251 22.76370 19.34907 22.08706 22.92162 17.15164 21.00979
[337] 15.01121 17.24532 22.03273 19.65108 20.17426 14.98892 18.10407 19.43629
[345] 21.22238 21.08896 17.90226 18.63212 22.60327 18.80159 20.54885 18.56381
[353] 16.21275 22.31064 20.98619 16.84941 24.35187 16.38049 17.05660 16.53941
[361] 23.10074 22.79664 18.67365 21.74672 19.28557 22.09591 17.58472 16.90525
[369] 17.91304 16.45817 18.58347 16.76026 22.88763 16.36207 22.13564 23.48419
[377] 22.22867 20.47851 22.47496 17.48389 19.62567 17.63208 21.08547 19.74304
[385] 18.92994 16.43148 22.91210 14.64069 15.74962 23.44913 15.91342 21.97645
[393] 17.85874 19.22036 22.78775 20.05640 21.29258 16.74812 18.06314 20.60193
[401] 35.12346 36.61350 39.64413 36.40228 36.24098 35.24914 38.58502 37.01909
[409] 39.28164 36.79046 35.22019 39.16022 37.77032 39.05209 38.30069 37.14523
[417] 36.07046 36.69862 36.87886 36.41117 35.56381 38.39286 32.53599 38.63735
[425] 37.03715 42.96124 37.28416 34.73322 37.79474 35.52043 36.77242 33.33851
[433] 36.32102 36.99494 34.94719 36.98025 34.75348 35.51889 36.91899 33.18090
[441] 39.76371 36.13301 40.07722 34.55340 38.50562 38.33054 36.25712 39.36107
[449] 40.90369 36.49316 35.43034 34.19422 40.23994 34.95853 43.15328 38.26374
[457] 40.83595 39.93541 36.21213 40.37466 35.47545 36.73649 35.17921 37.15966
[465] 35.96965 35.32950 36.29298 35.27815 36.41130 38.61078 38.91826 36.48760
[473] 37.89431 39.66253 34.96321 38.76625 42.42589 36.42143 36.41284 33.89637
[481] 42.83777 37.83781 35.88078 37.40350 36.06044 35.63376 40.26782 40.67687
[489] 37.39539 36.59689 35.25348 39.88345 34.55984 38.52377 35.66808 34.89919
[497] 38.14773 36.16915 34.92926 35.86732 22.94410 21.26220 25.70613 24.31072
[505] 26.20634 19.30244 25.05760 25.25006 23.26532 24.86433 23.82550 20.59513
[513] 24.42500 23.06002 22.60744 22.28671 24.51539 24.63956 24.49320 22.31813
[521] 19.72309 20.64546 24.02661 25.40943 20.99136 23.90416 19.38026 23.66794
[529] 25.46967 25.19721 27.25534 26.29218 24.93774 22.89070 25.24162 20.30597
[537] 26.75000 24.44881 18.42460 23.39375 24.75309 20.82607 20.05148 21.39433
[545] 26.00987 26.15003 21.21745 25.07507 20.70989 24.11700 26.67838 22.96602
[553] 20.70978 20.25223 23.00221 22.65868 23.07549 26.58146 25.17320 23.11451
[561] 27.28687 22.35479 21.83867 21.71601 23.20934 24.17781 24.68219 23.69082
[569] 23.51179 20.30824 20.34817 18.06217 19.68665 21.94543 21.21728 26.73879
[577] 23.66412 20.33310 26.27986 23.49785 24.30473 19.85810 24.89892 23.40628
[585] 21.00552 21.74430 22.70902 26.64179 25.20699 22.85282 23.56527 26.19264
[593] 21.21502 23.40330 22.47604 25.20465 24.49570 24.20247 19.49640 19.86541
> apply( control.chart.raw.df, 1, sd)
  [1]  3.547260  3.369085  3.318810  3.512137  3.616132  3.518239  3.694657
  [8]  3.529975  3.707729  3.875569  3.464944  3.577908  3.410197  3.432577
 [15]  3.552811  3.306882  3.384569  3.583190  3.235325  3.286221  3.396241
 [22]  3.814471  3.793810  3.360510  3.118109  3.387884  3.718901  3.538374
 [29]  3.147086  3.129933  3.694660  3.451289  3.765713  3.345604  3.603926
 [36]  3.582430  3.287006  3.646905  3.449182  3.329980  3.627789  3.159242
 [43]  3.392232  3.622886  3.454915  3.544284  3.235680  3.771411  3.197999
 [50]  3.498750  3.414750  3.384408  3.687759  3.085467  3.433415  3.363095
 [57]  3.143905  2.945765  3.664845  3.675193  3.542131  3.377665  3.422946
 [64]  3.415491  3.135612  3.716035  3.199381  3.380908  3.490446  3.593307
 [71]  3.605486  3.584812  3.292852  3.196530  3.502612  3.587035  3.447190
 [78]  3.588717  3.393584  3.478392  3.869590  3.703994  3.753739  3.779629
 [85]  3.133814  3.189606  3.435678  3.529809  3.636678  3.392063  3.422310
 [92]  3.468467  3.755784  3.598674  3.463121  3.430650  3.767897  3.336837
 [99]  3.679866  3.432144  9.455607 10.046269 10.353536 11.280038 10.511792
[106]  7.470248 10.811168  7.489731  9.097537  9.318596 10.888233 10.027589
[113]  8.550961 10.765238  7.478986  8.317446  8.548703  9.611975  9.359030
[120]  8.010205 10.251095  8.928547 10.363284  9.394555  9.415880 11.268660
[127] 10.466579  9.606905  9.447420  9.803415  8.188804  8.833572 10.416104
[134] 11.430598  9.844552  8.471895  8.663154 10.798763  8.267759  9.612493
[141] 11.464907 10.365860  8.220325  8.554547  8.858733  8.740492 10.841825
[148]  9.686744 10.098726  8.075492  8.460459  9.581717  8.383467  9.698254
[155] 11.277928  8.702923 11.338590  7.329310  9.971979  9.421560  7.424129
[162]  7.913278  9.477920 10.317944 10.421357 10.135876  8.243010  8.109839
[169]  8.354504  9.402426 10.302264 10.047220 10.681762  8.961220  9.127722
[176]  8.399807 10.765632  9.944047  8.450635 10.443590 10.123537  9.285512
[183]  8.759542 10.098144  9.151265  8.011076  9.725257 10.156675 11.253796
[190] 10.314122 10.265898 12.429989 10.565172 10.350761  6.981047 10.334729
[197] 10.347922 10.655454  8.157877  9.885692  5.886640  5.047369  9.451180
[204]  8.960690  6.319849  5.175479  9.268885  6.905500  8.475917  8.546966
[211]  6.037376  5.950402  7.565688  5.665747  6.880066  8.841043  5.844415
[218]  7.588956  4.986928  8.823692  8.412432  4.189337  8.436535  5.543114
[225]  8.095101  7.814785  5.472449  7.844418  9.070142  8.165514  7.195319
[232]  7.039910  8.999451  8.257098  6.085134  5.792208  8.070102  8.444356
[239]  7.020629  7.681287  6.947731  6.527894  8.231455  7.053524  8.123461
[246]  8.092991  7.059514  6.858943  8.177556  4.521081  7.401684  5.671579
[253]  7.452748  7.829345  4.686369  4.762050  6.992122  6.521012  7.701722
[260]  5.497969  8.112985  8.517339  5.348869  8.702118  6.883320  6.688247
[267]  8.969258  6.121026  6.363779  7.040503  5.834392  6.120147  5.464083
[274]  5.703853  7.191812  5.513575  6.995396  8.867750  6.604375  6.188645
[281]  7.375290  6.088205  7.330200  6.160864  7.571049  4.803503  7.456573
[288]  7.681616  5.597594  6.001630  6.332989  6.733323  7.312856  5.352598
[295]  7.329160  5.826169  4.842260  5.880194  6.024577  8.010919  9.488110
[302]  5.428888  5.812900  7.420409  6.077065  5.678405  7.081389  5.141845
[309]  6.800656  8.556256  8.904012  8.097675  8.526118  7.589019  7.661987
[316]  9.454663  4.437520  6.532060  7.464073  8.415815  9.306420  7.890119
[323]  9.322332  5.651872  6.987838  8.453146  6.433526  6.537995  5.988158
[330]  6.113195  5.089374  6.514460  5.778505  6.090468  8.829161  7.060608
[337]  8.649423  7.928702  6.753882  7.140311  5.650927  9.399627  7.707362
[344]  7.604966  6.429216  5.899467  8.381538  7.396383  6.035166  7.436842
[351]  5.621602  7.723894  8.572266  6.526129  5.721750  9.484508  4.195647
[358]  9.792146  8.004601  9.447780  5.560909  4.997958  7.028721  6.003798
[365]  7.090221  5.120367  8.599343  8.586055  7.205974  8.445644  6.740546
[372]  7.581822  5.031305  9.341780  5.724191  4.519407  5.787045  5.909139
[379]  6.290631  8.487704  7.623477  7.515929  6.351941  6.522365  8.162951
[386]  9.538006  5.607032  9.242716  9.333253  5.484635  8.478825  6.122555
[393]  8.339775  7.050310  5.540891  6.699222  5.857590  8.827535  7.545233
[400]  6.562012  6.034384  5.222253  9.591565 10.584321  5.328467  6.445617
[407]  9.504289 10.422079  6.974257  8.228185  5.671596 11.259932  9.868579
[414] 11.211199  7.449789  7.511481  7.232473  8.581562  7.135148  6.483222
[421]  7.488648 10.385456  5.052575 10.241536  9.313305 10.454679  7.320211
[428]  6.392205  6.471559  6.436955  8.014279  5.242672  8.665039  8.181076
[435]  5.897420  5.413313  7.711163  4.847573  6.316182  6.227358  8.929131
[442]  5.398680  7.823700  6.763702  8.031825  6.089850  5.847781  9.649044
[449]  8.363056  8.376275  6.722731  6.117764 10.367456  5.030276 10.303340
[456] 10.331929  8.855614  9.045617  5.488857  8.477352  7.529303  7.420554
[463]  5.579224 10.526441  7.080207  7.220930  6.456926  5.737985  6.504812
[470]  9.760397  8.487606  5.961665  8.874939  7.774291  7.433649  9.413887
[477]  9.733000  7.116601  7.852152  5.505061 10.937648  8.490332  8.821442
[484]  9.604975  7.745795  8.441509  8.787065  7.945779  5.792610  9.103924
[491]  4.910292  8.830565  6.977642  7.395610  8.570310  6.814994  9.712049
[498]  8.782979  5.351506  7.417899  9.329796  9.808033  5.669785  5.375869
[505]  5.869965  8.035274  6.178487  5.832970  8.411514  6.661685  7.774156
[512]  7.165533  8.178135  6.470115  8.500984  9.393685  5.647178  6.144041
[519]  4.864882  8.015250  7.985074  9.755696  8.618948  4.964249  9.696633
[526]  9.411109  9.868566  7.326806  7.363351  5.591787  5.515030  5.236749
[533]  5.885696  9.136375  7.727136  7.834230  6.394207  7.787991  9.823459
[540]  8.756287  5.228321  9.344552  8.173912  8.812141  4.851423  4.930280
[547] 10.587976  5.430782 10.395429  7.412516  5.576383  8.830166  9.634153
[554]  6.833139  6.275938  5.862185  5.579800  4.911002  5.895135  8.546458
[561]  5.103294  8.524392  8.509270  9.104545  9.579413  5.601472  7.858717
[568]  8.055392  5.917810  7.780958  8.368925  9.862348  7.960274 10.556604
[575]  7.488350  6.044772  5.928036  7.877127  5.525458  8.658061  6.456485
[582]  8.440789  7.621778  9.139044  7.720212  7.237046  8.895631  6.055350
[589]  5.292916  9.481603  7.775888  6.055201  7.653528  8.737035  8.847246
[596]  5.228247  8.222360  5.929711  7.797357  9.543241
> #
> # Result: not too dissimilar, but certainly not identical
> 
> #####################################################################
> # Step 2. Do k-means on raw dataset
> 
> control.chart.raw.km <- kmeans(
+   x=control.chart.raw.df,
+   centers=6,
+   iter.max=20,
+   nstart=10
+ )
> 
> # Interactive look at return value structure
> #
> summary(control.chart.raw.km)
             Length Class  Mode   
cluster      600    -none- numeric
centers      360    -none- numeric
totss          1    -none- numeric
withinss       6    -none- numeric
tot.withinss   1    -none- numeric
betweenss      1    -none- numeric
size           6    -none- numeric
> 
> #####################################################################
> # Step 3. Exract and prepare cluster assignments for review
> 
> # Intercative look at structure of cluster element
> # It is a vector of 600 integers
> #
> str(control.chart.raw.km$cluster)
 int [1:600] 2 2 2 2 2 2 2 2 2 2 ...
> 
> # We know that the data had six types of control charts, with 100 examples 
> # of each, in contiguous chunks of rows
> # See http://archive.ics.uci.edu/ml/databases/synthetic_control/synthetic_control.data.html
> # So lets create some factors and attach them to cluster assingment as a data frame
> #
> control.chart.type.factors <- as.factor(
+   c(
+     rep('1. Normal',100),
+     rep('2. Cyclic',100),
+     rep('3. Increasing trend',100),
+     rep('4. Decreasing trend',100),
+     rep('5. Upward shift',100),
+     rep('6. Downward shift',100)
+   )
+ )
> str(control.chart.type.factors)
 Factor w/ 6 levels "1. Normal","2. Cyclic",..: 1 1 1 1 1 1 1 1 1 1 ...
> 
> control.chart.raw.km.clusters.df <- data.frame(
+   actual.type=control.chart.type.factors,
+   modeled.cluster=control.chart.raw.km$cluster
+ )
> str(control.chart.raw.km.clusters.df)
'data.frame':	600 obs. of  2 variables:
 $ actual.type    : Factor w/ 6 levels "1. Normal","2. Cyclic",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ modeled.cluster: int  2 2 2 2 2 2 2 2 2 2 ...
> 
> 
> #####################################################################
> # Step 4. Use a lattice of histograms to review
> 
> # Lattice graphics includes methods to put many histograms on 
> # the same chart. It is installed by default, but not loaded
> # by default.
> #
> require('lattice')
Loading required package: lattice
> 
> 
> # The first argument is a "model formula" 
> # in "Wilkinon-Rogers (1973)" notation (see Venables-Ripley chap. 6)
> # Think of it as saying that the modeled.cluster values depend on the
> # control.chart.raw.clusters.
> # The third argument. layout, and is poorly documented. I learned this
> # trick from "R in a Nutshell" Figure 15-12.
> #
> histogram(
+   main="K-means clusters on raw data",
+   ~modeled.cluster|actual.type, 
+   data=control.chart.raw.km.clusters.df,
+   layout=c(1,6)
+ )
> 
> # Reviewing the chart, I am amazed at how well the clustering did work.
> # The normal charts are all in a cluste of their own. The clyclic charts 
> # are off by themselves, but split into two sub groups. Cyclics are clearly
> # distinguished from decreasing trend, but confused with upward shift.
> # Interesting, far from arbitrary, but not compelling.
> #
> 
> #####################################################################
> # Step 5. Since data are from time series, see if deltas work better
> 
> # 5A: convert time series data frame to matrix for simpler 
> #     math and indexing notation 
> #
> control.chart.raw.m <- as.matrix(control.chart.raw.df)
> 
> # Create a data frame that has the deltas betwen one observation
> # and the next:
> #
> # 5B. Initialize the first column of data frame by subtracting the 
> # the matrix first column from it's second. I use drop=FALSE to
> # preserve the column-like nature of the subtraction.
> #
> # Inspired by these recepies from the R Cookbook:
> #    5.17 Selecting One Row or Column from a Matrix
> #    5.29 Combining Two Data Frames
> #
> control.chart.deltas.df <- data.frame(
+   control.chart.raw.m[,2,drop=FALSE] - control.chart.raw.m[,1,drop=FALSE]
+ )
> 
> 
> # 5C. Iterate through the remaining matrix columns,
> # appending fresh delta column to existing data frame
> #
> for ( i in 3:ncol(control.chart.raw.m) ) {
+   # calculate the next column of deltas
+   # by subtracting column 1-2 from column i
+   new.column <- data.frame(
+     control.chart.raw.m[,i,drop=FALSE] - control.chart.raw.m[,i-1,drop=FALSE]
+   )
+   # combine the new column with the existing
+   # data frame, column-wise
+   control.chart.deltas.df <-cbind(
+     control.chart.deltas.df,
+     new.column
+   )
+ }
> # expecting 600 59
> dim(control.chart.deltas.df)
[1] 600  59
> 
> #####################################################################
> # Step 6. Do k-means on delta dataset
> 
> control.chart.deltas.km <- kmeans(
+   x=control.chart.deltas.df,
+   centers=6,
+   iter.max=20,
+   nstart=10
+ )
> 
> # Interactive look at return value structure
> #
> summary(control.chart.deltas.km)
             Length Class  Mode   
cluster      600    -none- numeric
centers      354    -none- numeric
totss          1    -none- numeric
withinss       6    -none- numeric
tot.withinss   1    -none- numeric
betweenss      1    -none- numeric
size           6    -none- numeric
> 
> #####################################################################
> # Step 7. Use a lattice of histograms to review delta clusters
> 
> 
> control.chart.deltas.clusters.df <- data.frame(
+   actual.type=control.chart.type.factors,
+   modeled.cluster=control.chart.deltas.km$cluster
+ )
> str(control.chart.deltas.clusters.df)
'data.frame':	600 obs. of  2 variables:
 $ actual.type    : Factor w/ 6 levels "1. Normal","2. Cyclic",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ modeled.cluster: int  6 1 5 5 6 5 6 5 6 6 ...
> 
> 
> # Lattice graphics includes methods to put many histograms on 
> # the same chart. It is installed by default, but not loaded
> # by default.
> #
> require('lattice')
> 
> 
> # The first argument is a "model formula" 
> # in "Wilkinon-Rogers (1973)" notation (see Venables-Ripley chap. 6)
> # Think of it as saying that the modeled.cluster values depend on the
> # control.chart.raw.clusters.
> # The third argument. layout, and is poorly documented. I learned this
> # trick from "R in a Nutshell" Figure 15-12.
> #
> histogram(
+   main="K-means clusters on deltas",
+   ~modeled.cluster|actual.type, 
+   data=control.chart.deltas.clusters.df,
+   layout=c(1,6)
+ )
> 
> # This did a horrible job!!!! Really bad!!!
> 
> 
> 
> proc.time()
   user  system elapsed 
  1.116   0.026   1.138 
